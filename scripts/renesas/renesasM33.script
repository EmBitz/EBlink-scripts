/////////////////////////////////////////////////////
//
//                   Renesas M33
//
//
/////////////////////////////////////////////////////
//
//   Memory map template of this device(s)
//   Avoid unnecessary spaces. (we omit the DOCTYPE, GDB isn't using it. )
//
const mem_template = @@"
<?xml version=\"1.0\"?>
<memory-map>
 <memory type=\"flash\" start=\"0x00000000\" length=\"0x%x\">
  <property name=\"blocksize\">0x2000</property>
  <property name=\"secstart\">0</property>
 </memory>

 <memory type=\"flash\" start=\"0x00010000\" length=\"0x%x\">
  <property name=\"blocksize\">0x8000</property>
 </memory>

 <memory type=\"flash\" start=\"0x08000000\" length=\"0x%x\">
  <property name=\"blocksize\">64</property>
  <property name=\"secstart\">1000</property>
  <property name=\"sectype\">gdb_nc</property>
 </memory>

 <memory type=\"ram\" start=\"0x20000000\" length=\"0x%x\"/>
 <memory type=\"ram\" start=\"0x28000000\" length=\"1024\"/>
 <memory type=\"ram\" start=\"0x40000000\" length=\"0x1fffffff\"/>
 <memory type=\"ram\" start=\"0xe0000000\" length=\"0x1fffffff\"/>
</memory-map>"

RNSS_DEV <- [
// Family,DFLASH,SRAM
 [ "A4E1",  8, 128 ],
 [ "A4E2",  4,  40 ],
 [ "A4M2",  8, 128 ],
 [ "A4M3",  8, 128 ],
 [ "A6M4",  8, 256 ],
 [ "A6M5",  8, 512 ],
 [ "A6E1",  8, 256 ],
 [ "A6E2",  4,  40 ],
 [ "A4T1",  4,  40 ],
 [ "A6T2", 16,  64 ],
 [ "A6T3",  4,  40 ],
]

const SYSC_SYOCDCR 0x4001e40e
const SYOCDCR_DBGEN (1<<7)

require("renesas/generic.script")

/////////////////////////////////////////////////////
//
//  Entry point of this script called by parent script
//
//      Remark: The intrfApi is a global object from parent
//
function renesas_device()
{
    local flash_size = getFlashSize()
    local dflash_size = 0
    local ram_size = 0

    foreach(dev in RNSS_DEV)
      if(dev[0] == familyStr){
          dflash_size = dev[1]
          ram_size = dev[2]
          break
      }

    if(!ram_size){
        errorf("\nThis Renesas part:\n %s\nis not support yet.\nVisit forum for help.", deviceStr)
        throw ERROR_NOTIFIED
    }

    intrfApi.write(SYSC_SYOCDCR,SYOCDCR_DBGEN,8)

    printf("Renesas family : R%s (%s)\n", familyStr, deviceStr)

    printf("Detected FLASH : %dKB\nConfigured DFL : %dKB\nConfigured RAM : %dKB\n", flash_size/1024, dflash_size, ram_size)

    // The user specified the size of flash memory
    if (isScriptObject("FLASH_SIZE") && FLASH_SIZE>0){
      printf("CLI set  FLASH : %dKB\n", flash_size)
      flash_size = (FLASH_SIZE & 0xffff) * 1024
    }

    // The user specified the size of ram memory
    if (isScriptObject("RAM_SIZE") && RAM_SIZE>0){
      printf("CLI set    RAM : %dKB\n", ram_size)
      ram_size = (RAM_SIZE & 0xffff)
    }

    // Devide the flash in below 64K and above 64K (different page sizes)
    local flash_high = 0
    if( flash_size > 0x10000){
        flash_high = flash_size - 0x10000
        flash_size = 0x10000
    }

    DeviceAPI().memmap( format( mem_template, flash_size, flash_high, dflash_size*1024, ram_size*1024))

    require("renesas/flash/rv40.script")
}

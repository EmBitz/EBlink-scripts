/////////////////////////////////////////////////////////////////////////////////
//
//          K32 Kinetis
//
//
// J.DuBois at Thermalogic Corporation (jer@thlogic.com)

const FTFA_FSTAT 0x40020000
const FSTAT_CCIF 0x80
const FTFA_FCCOB 0x40020004

const FCMD_PROGRAMLWORD  (0x06 << 24)
const FCMD_ERASEFLASHSEC (0x09 << 24)
const FCMD_ERASEALLBLKSU (0x49 << 24)

/////////////////////////////////////////////////////////////////////////////////
//
//   Called by EBlink to initialize upcoming flash operations.
//
function ebFlashStart()
{
    try {
        // Be sure that the core is halted
        targetApi.halt()
        return ERROR_OK
    }

    // Catch all the sector write errors
    catch(e){
       if(e < ERROR_NOTIFIED)
           errorf("ERROR: couldn't initialize target! [%s]\n", errorToStr(e) )
       return ERROR_NOTIFIED
    }
}

/////////////////////////////////////////////////////////////////////////////////
//
//   Called by EBlink to erase a sector
//    - ebFlashStart() is already called
//    - ebFlashDone() will be called if all flash operations are ready
//
function ebFlashErase(sector, address)
{
    try {

        executeFTFA(FCMD_ERASEFLASHSEC | (address & 0x0FFFFF))
        return ERROR_OK
    }

    // Catch all the sector erase errors
    catch(e){
       ebFlashDone()

        if(catchString(e))
            return ERROR_NOTIFIED

       if(e < ERROR_NOTIFIED)
           errorf("ERROR: erasing sector %d failed! [%s]\n", sector, errorToStr(e) )
       return ERROR_NOTIFIED
    }
}


/////////////////////////////////////////////////////////////////////////////////
//
//  Called by EBlink to write a sector.
//
function ebFlashWrite(sector, address, buffer)
{
    try {
        local len = buffer.getSize();

        for (local i=0;len > 0;i++,len-=4) {
            executeFTFA(FCMD_PROGRAMLWORD | address+i*4,buffer[i])
        }

        return ERROR_OK
    }

    // Catch all the sector write errors
    catch(e){
       ebFlashDone()

       if(catchString(e))
          return ERROR_NOTIFIED

       if(e < ERROR_NOTIFIED)
           errorf("ERROR: writing sector %d failed! [%s]\n", sector, errorToStr(e) )
       return ERROR_NOTIFIED
    }
}

/////////////////////////////////////////////////////////////////////////////////
//
//  Called by EBlink if chip erase is needed (e.g. command line flashing)
//
//   Erase the whole chip
//   - If this function is not defined, sector by sector erase is used by EBlink.
//   - This is an isolated function, ebFlashStart and ebFlashDone are not called by EBlink
//

function ebFlashEraseChip()
{
    try {
        executeFTFA(FCMD_ERASEALLBLKSU)
        return ERROR_OK
    }

    // Catch all the sector erase errors
    catch(e){
       if(catchString(e))
          return ERROR_NOTIFIED

       if(e < ERROR_NOTIFIED)
           errorf("ERROR: erasing chip failed! [%s]\n", errorToStr(e) )
       return ERROR_NOTIFIED
    }
}

/////////////////////////////////////////////////////////////////////////////////////////
//
function executeFTFA(cmd,...)
{

    // Check for busy
    do {
    } while(!(intrfApi.read(FTFA_FSTAT) & FSTAT_CCIF))

    // Clear any old errors
    intrfApi.write(FTFA_FSTAT,0x30)

    // Write command to FCCOB
    intrfApi.write(FTFA_FCCOB, cmd)

    // Write params to FCCOB
    for (local i=0;i < 2 && i < vargv.len();i++) {
       intrfApi.write(FTFA_FCCOB+(i+1)*4, vargv[i])
    }

    // Execute
    intrfApi.write(FTFA_FSTAT, FSTAT_CCIF)

    // Check for busy
    local value
    do {
        value = intrfApi.read(FTFA_FSTAT)
    } while(!(value & FSTAT_CCIF))

    if (value & 0x31)
        throw ERROR_FLASH
}
